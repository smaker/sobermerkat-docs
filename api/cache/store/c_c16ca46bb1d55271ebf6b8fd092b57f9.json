{
    "name": "PHPExcel_Shared_JAMA_QRDecomposition",
    "line": 19,
    "short_desc": "",
    "long_desc": "",
    "hint": null,
    "tags": {
        "package": [
            [
                "JAMA\n\nFor",
                "an",
                "m-by-n",
                "matrix",
                "A",
                "with",
                "m",
                ">=",
                "n,",
                "the",
                "QR",
                "decomposition",
                "is",
                "an",
                "m-by-n\northogonal",
                "matrix",
                "Q",
                "and",
                "an",
                "n-by-n",
                "upper",
                "triangular",
                "matrix",
                "R",
                "so",
                "that\nA",
                "=",
                "Q*R.\n\nThe",
                "QR",
                "decompostion",
                "always",
                "exists,",
                "even",
                "if",
                "the",
                "matrix",
                "does",
                "not",
                "have\nfull",
                "rank,",
                "so",
                "the",
                "constructor",
                "will",
                "never",
                "fail.",
                "",
                "The",
                "primary",
                "use",
                "of",
                "the\nQR",
                "decomposition",
                "is",
                "in",
                "the",
                "least",
                "squares",
                "solution",
                "of",
                "nonsquare",
                "systems\nof",
                "simultaneous",
                "linear",
                "equations.",
                "",
                "This",
                "will",
                "fail",
                "if",
                "isFullRank()\nreturns",
                "false.\n\n@author",
                "",
                "Paul",
                "Meagher\n@license",
                "PHP",
                "v3.0\n@version",
                "1.1"
            ]
        ]
    },
    "namespace": "",
    "file": "\/Users\/dowon\/Documents\/[\uc758\ub8b0|\uc3d8\ubc84\ub9c8\ucf13]\/lib\/PHPExcel\/Shared\/JAMA\/QRDecomposition.php",
    "relative_file": null,
    "hash": "0e67130566f2963c85f0a002c443a6317ca9d06a",
    "parent": null,
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "is_read_only": false,
    "aliases": null,
    "errors": [],
    "interfaces": [],
    "traits": [],
    "properties": [],
    "methods": {
        "__construct": {
            "name": "__construct",
            "line": 54,
            "short_desc": "QR Decomposition computed by Householder reflections.",
            "long_desc": " @param matrix $A Rectangular matrix",
            "hint": [
                [
                    "\\Structure",
                    false
                ]
            ],
            "hint_desc": "to access R and the Householder vectors and compute Q.",
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "is_intersection_type": false,
            "exceptions": [],
            "errors": [],
            "parameters": {
                "A": {
                    "name": "A",
                    "line": 54,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false,
                    "is_intersection_type": false
                }
            }
        },
        "isFullRank": {
            "name": "isFullRank",
            "line": 102,
            "short_desc": "Is the matrix full rank?",
            "long_desc": " @return boolean true if R, and hence A, has full rank, else false.",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "is_intersection_type": false,
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getH": {
            "name": "getH",
            "line": 117,
            "short_desc": "Return the Householder vectors",
            "long_desc": " @return Matrix Lower trapezoidal matrix whose columns define the reflections",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "is_intersection_type": false,
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getR": {
            "name": "getR",
            "line": 136,
            "short_desc": "Return the upper triangular factor",
            "long_desc": " @return Matrix upper triangular factor",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "is_intersection_type": false,
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "getQ": {
            "name": "getQ",
            "line": 157,
            "short_desc": "Generate and return the (economy-sized) orthogonal factor",
            "long_desc": " @return Matrix orthogonal factor",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "is_intersection_type": false,
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "solve": {
            "name": "solve",
            "line": 195,
            "short_desc": "Least squares solution of A*X = B",
            "long_desc": " @param Matrix $B A Matrix with as many rows as A and any number of columns.",
            "hint": [
                [
                    "\\Matrix",
                    false
                ]
            ],
            "hint_desc": "Matrix that minimizes the two norm of Q*R*X-B.",
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "is_intersection_type": false,
            "exceptions": [],
            "errors": [],
            "parameters": {
                "B": {
                    "name": "B",
                    "line": 195,
                    "short_desc": null,
                    "long_desc": null,
                    "hint": null,
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false,
                    "is_intersection_type": false
                }
            }
        }
    },
    "constants": {
        "MATRIX_RANK_EXCEPTION": {
            "name": "MATRIX_RANK_EXCEPTION",
            "line": 21,
            "short_desc": null,
            "long_desc": null,
            "modifiers": 0,
            "tags": []
        }
    }
}