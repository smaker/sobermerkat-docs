{
    "name": "PHPExcel_Shared_OLE_ChainedBlockStream",
    "line": 28,
    "short_desc": "PHPExcel_Shared_OLE_ChainedBlockStream",
    "long_desc": "Copyright (c) 2006 - 2015 PHPExcel\n\nThis library is free software; you can redistribute it and\/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA",
    "hint": null,
    "tags": {
        "category": [
            [
                "PHPExcel"
            ]
        ],
        "package": [
            [
                "PHPExcel_Shared_OLE"
            ]
        ],
        "copyright": [
            [
                "Copyright",
                "(c)",
                "2006",
                "-",
                "2007",
                "Christian",
                "Schmidt"
            ]
        ],
        "license": [
            [
                "http:\/\/www.gnu.org\/licenses\/old-licenses\/lgpl-2.1.txt",
                "",
                "",
                "",
                "LGPL"
            ]
        ],
        "version": [
            [
                "##VERSION##,",
                "##DATE##"
            ]
        ]
    },
    "namespace": "",
    "file": "\/Users\/dowon\/Documents\/[\uc758\ub8b0|\uc3d8\ubc84\ub9c8\ucf13]\/lib\/PHPExcel\/Shared\/OLE\/ChainedBlockStream.php",
    "relative_file": null,
    "hash": "d6feddd0ca5cc95c04827cb5ab87dba90bcb492b",
    "parent": null,
    "modifiers": 0,
    "is_trait": false,
    "is_interface": false,
    "is_read_only": false,
    "aliases": null,
    "errors": [],
    "interfaces": [],
    "traits": [],
    "properties": {
        "ole": {
            "name": "ole",
            "line": 34,
            "short_desc": "The OLE container of the file that is being read.",
            "long_desc": "",
            "hint": [
                [
                    "\\OLE",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 1,
            "default": null,
            "errors": [],
            "is_read_only": false,
            "is_write_only": false,
            "is_intersection_type": false
        },
        "params": {
            "name": "params",
            "line": 40,
            "short_desc": "Parameters specified by fopen().",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 1,
            "default": null,
            "errors": [],
            "is_read_only": false,
            "is_write_only": false,
            "is_intersection_type": false
        },
        "data": {
            "name": "data",
            "line": 46,
            "short_desc": "The binary data of the file.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "modifiers": 1,
            "default": null,
            "errors": [],
            "is_read_only": false,
            "is_write_only": false,
            "is_intersection_type": false
        },
        "pos": {
            "name": "pos",
            "line": 52,
            "short_desc": "The file pointer.",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "byte offset",
            "tags": [],
            "modifiers": 1,
            "default": null,
            "errors": [],
            "is_read_only": false,
            "is_write_only": false,
            "is_intersection_type": false
        }
    },
    "methods": {
        "stream_open": {
            "name": "stream_open",
            "line": 65,
            "short_desc": "Implements support for fopen().",
            "long_desc": "For creating streams using this wrapper, use OLE_PPS_File::getStream().",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "true on success",
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "is_intersection_type": false,
            "exceptions": [],
            "errors": [],
            "parameters": {
                "path": {
                    "name": "path",
                    "line": 65,
                    "short_desc": "resource name including scheme, e.g.\nole-chainedblockstream:\/\/oleInstanceId=1",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false,
                    "is_intersection_type": false
                },
                "mode": {
                    "name": "mode",
                    "line": 65,
                    "short_desc": "only \"r\" is supported",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false,
                    "is_intersection_type": false
                },
                "options": {
                    "name": "options",
                    "line": 65,
                    "short_desc": "mask of STREAM_REPORT_ERRORS and STREAM_USE_PATH",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false,
                    "is_intersection_type": false
                },
                "openedPath": {
                    "name": "openedPath",
                    "line": 65,
                    "short_desc": "absolute path of the opened stream (out parameter)",
                    "long_desc": null,
                    "hint": [
                        [
                            "string",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": true,
                    "is_read_only": false,
                    "is_intersection_type": false
                }
            }
        },
        "stream_close": {
            "name": "stream_close",
            "line": 119,
            "short_desc": "Implements support for fclose().",
            "long_desc": "",
            "hint": null,
            "hint_desc": null,
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "is_intersection_type": false,
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "stream_read": {
            "name": "stream_read",
            "line": 131,
            "short_desc": "Implements support for fread(), fgets() etc.",
            "long_desc": "",
            "hint": [
                [
                    "string",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "is_intersection_type": false,
            "exceptions": [],
            "errors": [],
            "parameters": {
                "count": {
                    "name": "count",
                    "line": 131,
                    "short_desc": "maximum number of bytes to read",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false,
                    "is_intersection_type": false
                }
            }
        },
        "stream_eof": {
            "name": "stream_eof",
            "line": 146,
            "short_desc": "Implements support for feof().",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "TRUE if the file pointer is at EOF; otherwise FALSE",
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "is_intersection_type": false,
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "stream_tell": {
            "name": "stream_tell",
            "line": 157,
            "short_desc": "Returns the position of the file pointer, i.e. its offset into the file\nstream. Implements support for ftell().",
            "long_desc": "",
            "hint": [
                [
                    "int",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "is_intersection_type": false,
            "exceptions": [],
            "errors": [],
            "parameters": []
        },
        "stream_seek": {
            "name": "stream_seek",
            "line": 169,
            "short_desc": "Implements support for fseek().",
            "long_desc": "",
            "hint": [
                [
                    "bool",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "is_intersection_type": false,
            "exceptions": [],
            "errors": [],
            "parameters": {
                "offset": {
                    "name": "offset",
                    "line": 169,
                    "short_desc": "byte offset",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false,
                    "is_intersection_type": false
                },
                "whence": {
                    "name": "whence",
                    "line": 169,
                    "short_desc": "SEEK_SET, SEEK_CUR or SEEK_END",
                    "long_desc": null,
                    "hint": [
                        [
                            "int",
                            false
                        ]
                    ],
                    "tags": [],
                    "modifiers": 0,
                    "default": null,
                    "variadic": false,
                    "is_by_ref": false,
                    "is_read_only": false,
                    "is_intersection_type": false
                }
            }
        },
        "stream_stat": {
            "name": "stream_stat",
            "line": 188,
            "short_desc": "Implements support for fstat(). Currently the only supported field is\n\"size\".",
            "long_desc": "",
            "hint": [
                [
                    "array",
                    false
                ]
            ],
            "hint_desc": "",
            "tags": [],
            "see": [],
            "modifiers": 1,
            "is_by_ref": "",
            "is_intersection_type": false,
            "exceptions": [],
            "errors": [],
            "parameters": []
        }
    },
    "constants": []
}